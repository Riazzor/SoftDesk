# Generated by Django 4.1.4 on 2023-01-19 11:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                ("is_superuser", models.BooleanField(default=False,
                 help_text="Designates that this user has all permissions without explicitly assigning them.", verbose_name="superuser status")),
                ("username", models.CharField(error_messages={"unique": "A user with that username already exists."}, help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                 max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name="username")),
                ("is_staff", models.BooleanField(default=False,
                 help_text="Designates whether the user can log into this admin site.", verbose_name="staff status")),
                ("is_active", models.BooleanField(
                    default=True, help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.", verbose_name="active")),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("user_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=128, verbose_name="Prénom")),
                ("last_name", models.CharField(max_length=128, verbose_name="Nom de famille")),
                ("email", models.EmailField(max_length=128, unique=True, verbose_name="Adresse email")),
                ("groups", models.ManyToManyField(blank=True, help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                 related_name="user_set", related_query_name="user", to="auth.group", verbose_name="groups")),
                ("user_permissions", models.ManyToManyField(blank=True, help_text="Specific permissions for this user.",
                 related_name="user_set", related_query_name="user", to="auth.permission", verbose_name="user permissions")),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                ("project_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=128, verbose_name="Titre")),
                ("description", models.CharField(max_length=1024)),
                ("type", models.CharField(choices=[("project", "Projet"), ("product", "Produit"),
                 ("application", "Application")], default="project", max_length=128)),
                ("created_time", models.DateTimeField(auto_now_add=True)),
                ("updated_time", models.DateTimeField(auto_now=True)),
                ("author_user", models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                 related_name="projects", to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                ("issue_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=128, verbose_name="Titre")),
                ("description", models.CharField(max_length=128)),
                ("tag", models.CharField(choices=[("bug", "Bug"), ("feature", "Amelioration"),
                 ("task", "Tache")], max_length=128, verbose_name="Étiquette")),
                ("priority", models.CharField(choices=[
                 ("low", "Faible"), ("medium", "Moyen"), ("high", "Eleve")], max_length=128, verbose_name="Priorité")),
                ("status", models.CharField(choices=[("todo", "A faire"),
                 ("in_progress", "En cours"), ("done", "Termine")], max_length=128)),
                ("created_time", models.DateTimeField(auto_now_add=True)),
                ("updated_time", models.DateTimeField(auto_now=True)),
                ("assignee", models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                 related_name="assigned_issues", to=settings.AUTH_USER_MODEL)),
                ("author", models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                 related_name="issues", to=settings.AUTH_USER_MODEL)),
                ("project", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name="issues", to="issue_tracking_api.project")),
            ],
        ),
        migrations.CreateModel(
            name="Contributor",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("permission", models.CharField(choices=[
                 ("read", "Lecture seule"), ("write", "Ecriture"), ("delete", "Suppression")], default="read", max_length=128)),
                ("role", models.CharField(choices=[("author", "Auteur"), ("member",
                 "Membre"), ("contributor", "Contributeur")], max_length=128)),
                ("project", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name="contributors", to="issue_tracking_api.project")),
                ("user", models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                 related_name="contributors", to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                ("comment_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("description", models.CharField(max_length=128)),
                ("created_time", models.DateTimeField(auto_now_add=True)),
                ("updated_time", models.DateTimeField(auto_now=True)),
                ("author", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name="comments", to=settings.AUTH_USER_MODEL)),
                ("issue", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name="comments", to="issue_tracking_api.issue")),
            ],
        ),
    ]
